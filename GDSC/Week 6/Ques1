// { Driver Code Starts
// C++ program to evaluate value of a postfix expression

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    //Function to evaluate a postfix expression.
    int evaluatePostfix(string S)
    {
        stack <int> stk;
        int i=0;
        int ans=0;
        while(i!=S.length())
        {
            char ch=S[i];
            if(ch=='+')
            {
                int b=stk.top();
                stk.pop();
                int a=stk.top();
                stk.pop();
                ans=a+b;
                stk.push(ans);
            }
            else if(ch=='-')
            {
                int b=stk.top();
                stk.pop();
                int a=stk.top();
                stk.pop();
                ans=a-b;
                stk.push(ans);
            }
            else if(ch=='*')
            {
                int b=stk.top();
                stk.pop();
                int a=stk.top();
                stk.pop();
                ans=a*b;
                stk.push(ans);
            }
            else if(ch=='/')
            {
                int b=stk.top();
                stk.pop();
                int a=stk.top();
                stk.pop();
                ans=a/b;
                stk.push(ans);
            }
            else
            {
                int e=ch-'0';
                stk.push(e);
            }
            i++;
        }
        return ans;
    }
};

// { Driver Code Starts.

// Driver program to test above functions
int main()
{
    int t;
    cin>>t;
    cin.ignore(INT_MAX, '\n');
    while(t--)
    {
        string S;
        cin>>S;
        Solution obj;
    
    cout<<obj.evaluatePostfix(S)<<endl;
    }
    return 0;
}
  // } Driver Code Ends
