class MinStack {
public:
    vector <int> ans;
    int mn;
    MinStack() 
    {
        mn=INT_MAX;
    }
    
    void push(int val) 
    {
        if(val<mn)
        {
            mn=val;
        }
        ans.push_back(val);
    }
    
    void pop() 
    {
        int last=ans[ans.size()-1];
        if(last==mn)
        {
            ans.pop_back();
            mn=INT_MAX;
            for(int i=0;i<ans.size();i++)
            {
                mn=min(mn,ans[i]);
            }
        }
        else
        {
            ans.pop_back();
        }
    }
    
    int top() 
    {
        if(ans.size()>0)
            return ans[ans.size()-1];
        else 
            return -1;
    }
    
    int getMin() 
    {
        return mn;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
