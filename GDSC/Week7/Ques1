class MyStack {
public:
    queue <int> q1,q2;
    MyStack() 
    {
        
    }
    
    void push(int x) 
    {
        if(q1.empty()==1)
        {
            q2.push(x);
        }
        else
        {
            q1.push(x);
        }
    }
    
    int pop() 
    {
        int t;
        if(q1.empty()==1 && q2.empty()==1)
        {
            return -1;
        }
        else if(q1.empty()==1)
        {
            while(q2.size()>1)
            {
                q1.push(q2.front());
                q2.pop();
            }
            t=q2.front();
            q2.pop();
        }
        else
        {
            while(q1.size()>1)
            {
                q2.push(q1.front());
                q1.pop();
            }
            t=q1.front();
            q1.pop();
        }
        return t;
    }
    
    int top() 
    {
        int t;
        if(q1.empty()==1 && q2.empty()==1)
        {
            return -1;
        }
        else if(q1.empty()==1)
        {
            while(q2.size()>1)
            {
                q1.push(q2.front());
                q2.pop();
            }
            t=q2.front();
            q1.push(q2.front());
            q2.pop();
        }
        else
        {
            while(q1.size()>1)
            {
                q2.push(q1.front());
                q1.pop();
            }
            t=q1.front();
            q2.push(q1.front());
            q1.pop();
        }
        return t;
    }
    
    bool empty() 
    {
        if(q1.empty()==1 && q2.empty()==1)
        {
            return true;
        }
        return false;
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
