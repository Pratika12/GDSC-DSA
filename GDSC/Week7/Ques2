class MyQueue {
public:
    stack <int> s1,s2;
    MyQueue() {
        
    }
    
    void push(int x) 
    {
        if(s2.empty()==1)
        {
            s1.push(x);
        }
        else
        {
            while(s2.empty()==0)
            {
                s1.push(s2.top());
                s2.pop();
            }
            s1.push(x);
        }
    }
    
    int pop() 
    {
        int t;
        if(s2.empty()==1 && s1.empty()==1)
        {
            return -1;
        }
        else if(s2.empty()==1)
        {
            while(s1.size()>1)
            {
                s2.push(s1.top());
                s1.pop();
            }
            t=s1.top();
            s1.pop();
        }
        else
        {
            t=s2.top();
            s2.pop();
        }
        return t;
    }
    
    int peek() 
    {
        int t;
        if(s2.empty()==1 && s1.empty()==1)
        {
            return -1;
        }
        else if(s2.empty()==1)
        {
            while(s1.size()>1)
            {
                s2.push(s1.top());
                s1.pop();
            }
            t=s1.top();
            s2.push(s1.top());
            s1.pop();
        }
        else
        {
            t=s2.top();
        }
        return t;
    }
    
    bool empty() 
    {
        if(s2.empty()==1 && s1.empty()==1)
        {
            return true;
        }
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
